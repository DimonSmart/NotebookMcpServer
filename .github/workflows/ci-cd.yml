name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*.*.*'
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  DOTNET_VERSION: '9.0.x'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    name: Build and Test
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore --configuration Release

    - name: Test
      run: dotnet test --no-build --verbosity normal --configuration Release

    - name: Pack
      run: dotnet pack --no-build --configuration Release --output ./artifacts

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: "**/TestResults/*.trx"

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: ./artifacts

  publish-binaries:
    if: github.event_name == 'push' && (startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/main')
    needs: build-and-test
    runs-on: ubuntu-latest
    name: Publish Release Binaries
    
    strategy:
      matrix:
        runtime: ['win-x64', 'linux-x64', 'linux-arm64', 'osx-x64', 'osx-arm64']
    
    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Publish ${{ matrix.runtime }}
      run: |
        dotnet publish src/NotebookMcpServer/NotebookMcpServer.csproj \
          --configuration Release \
          --runtime ${{ matrix.runtime }} \
          --self-contained true \
          --output ./publish/${{ matrix.runtime }} \
          /p:PublishSingleFile=true \
          /p:PublishTrimmed=false \
          /p:DebugType=None \
          /p:DebugSymbols=false

    - name: Create release archive
      run: |
        cd ./publish/${{ matrix.runtime }}
        if [[ "${{ matrix.runtime }}" == win-* ]]; then
          zip -r "../../NotebookMcpServer-${{ matrix.runtime }}.zip" .
        else
          tar -czf "../../NotebookMcpServer-${{ matrix.runtime }}.tar.gz" .
        fi

    - name: Upload release binaries
      uses: actions/upload-artifact@v4
      with:
        name: NotebookMcpServer-${{ matrix.runtime }}
        path: NotebookMcpServer-${{ matrix.runtime }}.*

  create-release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [build-and-test, publish-binaries]
    runs-on: ubuntu-latest
    name: Create GitHub Release
    
    steps:
    - uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ./artifacts/NotebookMcpServer-win-x64/NotebookMcpServer-win-x64.zip
          ./artifacts/NotebookMcpServer-linux-x64/NotebookMcpServer-linux-x64.tar.gz
          ./artifacts/NotebookMcpServer-linux-arm64/NotebookMcpServer-linux-arm64.tar.gz
          ./artifacts/NotebookMcpServer-osx-x64/NotebookMcpServer-osx-x64.tar.gz
          ./artifacts/NotebookMcpServer-osx-arm64/NotebookMcpServer-osx-arm64.tar.gz
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
